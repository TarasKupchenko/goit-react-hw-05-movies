{"version":3,"file":"static/js/659.43be74d9.chunk.js","mappings":"kOA2CA,UAtCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAgCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAUF,EAAA,GAgB5B,OAdAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEKC,EAAAA,EAAAA,IAAatB,GAAS,KAAD,EAAzCkB,EAAWC,EAAAI,KACjBhB,EAAWW,GACXP,GAAW,GAAOQ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAElBM,QAAQC,MAAM,0BAAyBP,EAAAK,IAAS,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAEnD,kBARqB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAUtBhB,GACF,GAAG,CAACb,KAGF8B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGrB,IAAasB,EAAAA,EAAAA,KAACC,EAAAA,QAAM,IACpB3B,GAAWA,EAAQ4B,OAAS,GAC3BF,EAAAA,EAAAA,KAAA,MAAAD,SACGzB,EAAQ6B,KAAI,SAAAC,GAAM,OACjBN,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKK,EAAOC,UACZL,EAAAA,EAAAA,KAAA,KAAAD,SAAIK,EAAOE,YAFJF,EAAOG,GAGX,OAITP,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uCAIX,C","sources":["components/Reviews/Reviews .jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'components/services/Api';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchReviewsData = async () => {\n      try {\n        const reviewsData = await fetchReviews(movieId);\n        setReviews(reviewsData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviewsData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h4>{review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews found for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setLoading","useEffect","fetchReviewsData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","reviewsData","_context","prev","next","fetchReviews","sent","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","Loader","length","map","review","author","content","id"],"sourceRoot":""}