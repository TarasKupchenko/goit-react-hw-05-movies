{"version":3,"file":"static/js/184.80b07215.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","components/MovieSearchForm/MovieSearchForm.jsx","components/pages/Movies.jsx","components/services/Api.js"],"sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink state={{ from: location }} to={`/movies/${movie.id}`}>\n            {movie.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useState } from 'react';\n\nconst MovieSearchForm = ({ onSearch }) => {\n  const [searchKeyword, setSearchKeyword] = useState('');\n\n  const handleInputChange = event => {\n    setSearchKeyword(event.target.value);\n  };\n\n  const handleSearch = event => {\n    event.preventDefault();\n    onSearch(searchKeyword);\n  };\n\n  return (\n    <form onSubmit={handleSearch}>\n      <input\n        type=\"text\"\n        placeholder=\"Search movies by title...\"\n        name=\"searchInput\"\n        onChange={handleInputChange}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default MovieSearchForm;\n","// components/Movies.js\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMoviesApi } from '../services/Api';\nimport Loader from 'components/Loader/Loader';\nimport MovieSearchForm from '../MovieSearchForm/MovieSearchForm';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searched, setSearched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('movie');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (query === null) return;\n\n      try {\n        setIsLoading(true);\n        const data = await fetchMoviesApi(query);\n        setMovies(data);\n        setSearched(true);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [query]);\n\n  const handleSearch = searchKeyword => {\n    setSearchParams({ movie: searchKeyword });\n  };\n\n  return (\n    <div>\n      <h2>Movies</h2>\n      <MovieSearchForm onSearch={handleSearch} />\n      {isLoading && <Loader />}\n      {movies.length > 0 ? (\n        <MovieList movies={movies} location={location} />\n      ) : (\n        searched && <p>No movies found for the given keyword.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '27cf9ca08224d5da159ec688a33b0bea';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n//export const fetchMoviesApi = async searchKeyword => {\n//  try {\n//    const response = await fetch(\n//      `https://api.themoviedb.org/3/search/movie?api_key=27cf9ca08224d5da159ec688a33b0bea&query=${searchKeyword}`\n//    );\n//    const data = await response.json();\n//    return data.results;\n//  } catch (error) {\n//    console.error('Error fetching movies:', error);\n//    return [];\n//  }\n//};\n\n//export const fetchMovieDetails = async movieId => {\n//  try {\n//    const response = await fetch(\n//      `https://api.themoviedb.org/3/movie/${movieId}?api_key=27cf9ca08224d5da159ec688a33b0bea`\n//    );\n//    const data = await response.json();\n//    return data;\n//  } catch (error) {\n//    console.error('Error fetching movie details:', error);\n//    return null;\n//  }\n//};\nexport const fetchMoviesApi = async searchKeyword => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKeyword,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, {\n      params: {\n        api_key: '27cf9ca08224d5da159ec688a33b0bea',\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n"],"names":["_ref","movies","location","_jsx","children","map","movie","NavLink","state","from","to","concat","id","title","onSearch","_useState","useState","_useState2","_slicedToArray","searchKeyword","setSearchKeyword","_jsxs","onSubmit","event","preventDefault","type","placeholder","name","onChange","target","value","setMovies","_useState3","_useState4","searched","setSearched","_useState5","_useState6","isLoading","setIsLoading","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","fetchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","fetchMoviesApi","sent","t0","console","error","finish","stop","apply","arguments","MovieSearchForm","Loader","length","MovieList","API_KEY","BASE_URL","response","axios","params","api_key","results","_x","fetchMovieDetails","_ref2","_callee2","movieId","_context2","_x2","fetchTrendingMovies","_ref3","_callee3","_context3","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMovieCredits","_ref5","_callee5","_context5","cast","_x4"],"sourceRoot":""}