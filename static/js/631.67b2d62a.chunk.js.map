{"version":3,"file":"static/js/631.67b2d62a.chunk.js","mappings":"uPAGaA,EAAO,WAClB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAkBpB,OAhBAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAECC,MAAM,sCAADC,OACYpB,EAAO,sDAC7C,KAAD,EAFa,OAARc,EAAQE,EAAAK,KAAAL,EAAAE,KAAA,EAGKJ,EAASQ,OAAO,KAAD,EAA5BP,EAAIC,EAAAK,KACVd,EAAQQ,EAAKT,MAAMU,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEnBQ,QAAQC,MAAM,gCAA+BT,EAAAO,IAAS,yBAAAP,EAAAU,OAAA,GAAAb,EAAA,mBAEzD,kBAVsB,OAAAH,EAAAiB,MAAA,KAAAC,UAAA,KAYvBnB,GACF,GAAG,CAACT,KAGF6B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,MAAAD,SACGxB,EAAK0B,KAAI,SAAAC,GAAK,OACbJ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEG,IAAG,mCAAAd,OAAqCa,EAAME,cAC9CC,IAAKH,EAAMI,KACXC,MAAM,SAERP,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAMI,QACVR,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYG,EAAMM,eAPdN,EAAMO,GAQV,QAKf,EAEA,W,sBC3CA,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOzB,GAEP,YADAmB,EAAOnB,EAET,CAEIwB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASnC,EAAkB2C,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAO7B,UACX,OAAO,IAAIwB,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAG3B,MAAM4B,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOY,GACdjB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASY,EACnE,CAEAb,OAAMc,EACR,GACF,CACF,C","sources":["components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=27cf9ca08224d5da159ec688a33b0bea`\n        );\n        const data = await response.json();\n        setCast(data.cast);\n      } catch (error) {\n        console.error('Error fetching movie credits:', error);\n      }\n    };\n\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h3>Movie Cast</h3>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n              alt={actor.name}\n              width=\"100\"\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovieCredits","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","data","_context","prev","next","fetch","concat","sent","json","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","map","actor","src","profile_path","alt","name","width","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","fn","self","this","args","err","undefined"],"sourceRoot":""}