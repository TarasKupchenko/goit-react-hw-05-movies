{"version":3,"file":"static/js/771.0dd8302b.chunk.js","mappings":"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","sources":["components/Reviews/Reviews .jsx","components/services/Api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'components/services/Api';\nimport Loader from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchReviewsData = async () => {\n      try {\n        const reviewsData = await fetchReviews(movieId);\n        setReviews(reviewsData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviewsData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h4>{review.author}</h4>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews found for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '27cf9ca08224d5da159ec688a33b0bea';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n//export const fetchMoviesApi = async searchKeyword => {\n//  try {\n//    const response = await fetch(\n//      `https://api.themoviedb.org/3/search/movie?api_key=27cf9ca08224d5da159ec688a33b0bea&query=${searchKeyword}`\n//    );\n//    const data = await response.json();\n//    return data.results;\n//  } catch (error) {\n//    console.error('Error fetching movies:', error);\n//    return [];\n//  }\n//};\n\n//export const fetchMovieDetails = async movieId => {\n//  try {\n//    const response = await fetch(\n//      `https://api.themoviedb.org/3/movie/${movieId}?api_key=27cf9ca08224d5da159ec688a33b0bea`\n//    );\n//    const data = await response.json();\n//    return data;\n//  } catch (error) {\n//    console.error('Error fetching movie details:', error);\n//    return null;\n//  }\n//};\nexport const fetchMoviesApi = async searchKeyword => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKeyword,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movies:', error);\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    return null;\n  }\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/all/day`, {\n      params: {\n        api_key: '27cf9ca08224d5da159ec688a33b0bea',\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    return [];\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching reviews:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie credits:', error);\n    throw error;\n  }\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setLoading","useEffect","fetchReviewsData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","reviewsData","_context","prev","next","fetchReviews","sent","t0","console","error","stop","apply","arguments","_jsxs","children","_jsx","Loader","length","map","review","author","content","id","API_KEY","BASE_URL","fetchMoviesApi","searchKeyword","response","axios","concat","params","api_key","query","abrupt","data","results","_x","fetchMovieDetails","_ref2","_callee2","_context2","_x2","fetchTrendingMovies","_ref3","_callee3","_context3","_ref4","_callee4","_context4","_x3","fetchMovieCredits","_ref5","_callee5","_context5","cast","_x4"],"sourceRoot":""}